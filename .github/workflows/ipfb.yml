name: IPFB

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
  schedule:
    - cron: "0 12 1,15 * *"

env:
  BUILD_TYPE: Release
  GP2040_BOARDCONFIG: IntegratedPicoFightingBoard
  GP2040_CE_REPO: OpenStickCommunity/GP2040-CE

jobs:
  get-release-version:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
    - run: |  
        TAG=$(gh release view --repo '${{ env.GP2040_CE_REPO }}' --json tagName --jq .tagName || echo)
        echo 'GP2040_CE_TAG='$TAG >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
    - run: |
        TAG=$(gh release view --repo '${{ github.repository }}' --json tagName --jq .tagName || echo)
        echo 'CURRENT_TAG='$TAG >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
    - run: touch ${{github.workspace}}/release_version.txt
    - if: ${{ env.GP2040_CE_TAG != 'release not found' && env.GP2040_CE_TAG != env.CURRENT_TAG }}
      run: echo $GP2040_CE_TAG > ${{github.workspace}}/release_version.txt
    - uses: actions/upload-artifact@v4.3.1
      with:
        name: Release Version
        path: ${{github.workspace}}/release_version.txt
        if-no-files-found: error

  build-firmware:
    runs-on: ubuntu-latest

    steps:
    #Global Setup
    - name: Checkout GP2040-CE
      uses: actions/checkout@v4.1.1
      with:
        repository: '${{ env.GP2040_CE_REPO }}'
        fetch-depth: 0
        fetch-tags: true

    - name: Fix cmake.yml
      run: |
        sed -Ei 's/GP2040_BOARDCONFIG: .*$/GP2040_BOARDCONFIG: ${{ env.GP2040_BOARDCONFIG }}'" .github/workflows/cmake.yml && \
        sed -Ei "s/^(\s+- name: Setup SDK pipeline)$/    - name: Checkout IPFB\n      uses: actions/checkout@v4.1.1\n      with:\n        path: configs/${{ env.GP2040_BOARDCONFIG }}/\n\n\1/" .github/workflows/cmake.yml

    - name: Build GPCE
      uses: ./github/workflows/cmake.yml

  create-release:
    permissions:
      contents: write
    needs:
      - get-release-version
      - build-firmware
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Get Release Version
        uses: actions/download-artifact@v4.1.2
        with:
          name: Release Version
          path: ${{github.workspace}}/

      - run: echo "RELEASE_VERSION=$(cat release_version.txt)" >> $GITHUB_ENV

      - name: Download Build Artifacts
        if: ${{ env.RELEASE_VERSION != '' }}
        uses: actions/download-artifact@v4.1.2
        with:
          name: GP2040-CE - ${{ env.GP2040_BOARDCONFIG }}
          path: ${{github.workspace}}/

      - name: Create Release
        if: ${{ env.RELEASE_VERSION != '' }}
        run: gh release create --repo '${{ github.repository }}' --notes "This is an automated release. See the GP2040-CE patch notes for ${{ env.RELEASE_VERSION }} [here](https://github.com/${{ env.GP2040_REPO }}/releases/tag/${{ env.RELEASE_VERSION }})." ${{ env.RELEASE_VERSION }} ./*.uf2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
